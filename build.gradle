
buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4-M1"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4-M1'
    // id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'application'
}


apply plugin: 'kotlin-kapt'

mainClassName = 'TyphoonAppKt'

group 'typhoon'
version '1.0-SNAPSHOT'

def arrow_version = "0.10.4"

sourceCompatibility = 1.8


repositories {
    mavenCentral()
    jcenter()
    maven { url { "https://dl.bintray.com/arrow-kt/arrow-kt/" } }
    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile "no.tornado:tornadofx:1.7.20"

    compile 'io.github.microutils:kotlin-logging:1.7.6'

    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.10.2'

    implementation 'com.vladsch.flexmark:flexmark-all:0.50.44'

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.1.1")

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'

    compile "io.arrow-kt:arrow-fx:$arrow_version"
    compile "io.arrow-kt:arrow-syntax:$arrow_version"
    // kapt    "io.arrow-kt:arrow-meta:$arrow_version"

    implementation "org.koin:koin-core:2.0.1"

    compile project('ty-backend')


}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
   // kotlinOptions.freeCompilerArgs += '-XXLanguage:+NewInference'
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    test.kotlin.srcDirs += 'src/test/kotlin'
}



jar {
    archiveName = 'Typhoon.jar'

    manifest {
        attributes 'Main-Class': 'TyphoonAppKt',
                'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' '),
                'Implementation-Version': project.version
    }

    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {}
}
